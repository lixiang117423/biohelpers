% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_dams_deseq2.R
\name{find_dams_deseq2}
\alias{find_dams_deseq2}
\title{Identify Differentially Abundant Microorganisms/Taxa Using DESeq2}
\usage{
find_dams_deseq2(
  data,
  sample,
  formula = ~group,
  log2FoldChange = 1,
  padj = 0.05,
  min.count.per.sample = 1,
  min.samples.with.counts = 2
)
}
\arguments{
\item{data}{Integer count matrix where rows represent microbial features (OTUs, ASVs,
taxa, etc.) and columns represent samples. Row names should be feature identifiers
and column names should match sample names in the sample metadata. All values
must be non-negative integers (raw counts, not normalized or transformed)}

\item{sample}{Data frame containing sample metadata where rows represent samples
and columns contain experimental factors. Row names should match column names
in the count data. Must contain at least one grouping variable for comparison}

\item{formula}{Design formula specifying the experimental design for DESeq2
analysis. Default is \code{~group}, assuming a column named "group" exists
in the sample metadata. Examples:
\itemize{
  \item \code{~treatment}: Simple comparison between treatments
  \item \code{~treatment + batch}: Account for batch effects
  \item \code{~treatment + time}: Include time as a factor
}}

\item{log2FoldChange}{Minimum absolute log2 fold change threshold for
significance calling (default: 1, equivalent to 2-fold change). Features
with |log2FC| >= this value and padj < padj threshold are considered
differentially abundant}

\item{padj}{Adjusted p-value (FDR) threshold for significance (default: 0.05).
Features with adjusted p-values below this threshold are considered significant}

\item{min.count.per.sample}{Minimum count per sample for feature filtering
(default: 1). Features with counts below this threshold in all samples may
be filtered out to improve statistical power}

\item{min.samples.with.counts}{Minimum number of samples that must have counts
above min.count.per.sample for a feature to be retained (default: 2)}
}
\value{
A data frame containing differential abundance results with columns:
  \itemize{
    \item \code{feature_id}: Feature identifiers (formerly OTU column)
    \item \code{baseMean}: Mean normalized counts across all samples
    \item \code{log2FoldChange}: Log2 fold change between conditions
    \item \code{lfcSE}: Standard error of log2 fold change
    \item \code{stat}: Wald statistic
    \item \code{pvalue}: Raw p-value from Wald test
    \item \code{padj}: Benjamini-Hochberg adjusted p-value (FDR)
    \item \code{significance}: Significance classification:
      \itemize{
        \item "Enriched": log2FC > threshold & padj < threshold
        \item "Depleted": log2FC < -threshold & padj < threshold  
        \item "NS": Not significant
      }
    \item \code{fold_change}: Actual fold change (2^log2FoldChange)
    \item \code{abs_log2fc}: Absolute log2 fold change for ranking
  }
}
\description{
This function performs differential abundance analysis on microbiome count data
using DESeq2's negative binomial model. It identifies taxa (OTUs, ASVs, or other
features) that are significantly enriched or depleted between different conditions
or groups. DESeq2 is particularly well-suited for count data with overdispersion
commonly observed in microbiome datasets.
}
\details{
This function implements the DESeq2 workflow for microbiome data:
\enumerate{
  \item Creates DESeqDataSet from count matrix and sample metadata
  \item Estimates size factors for normalization
  \item Estimates dispersions (gene-wise and fitted)
  \item Fits negative binomial generalized linear models
  \item Performs Wald tests for differential abundance
  \item Applies Benjamini-Hochberg correction for multiple testing
}

DESeq2 assumptions:
\itemize{
  \item Count data follows negative binomial distribution
  \item Features are independent
  \item Samples are independent
  \item Sequencing depth varies between samples (handled by normalization)
}
}
\note{
\itemize{
  \item Input data must be raw counts (integers), not relative abundances
  \item Very sparse features (present in few samples) may not test reliably
  \item Consider rarefying or filtering low-abundance features before analysis
  \item DESeq2 internally normalizes for library size differences
  \item For complex designs, ensure sufficient samples per group
}
}
\examples{
library(biohelpers)
library(dplyr)

# Example 1: Basic differential abundance analysis
\dontrun{
# Load example microbiome data
data(df.pcoa.otu)     # OTU count table
data(df.pcoa.sample)  # Sample metadata

# Transpose count data (DESeq2 expects features as rows)
count_matrix <- t(df.pcoa.otu)

# Basic differential abundance analysis
dam_results <- find_dams_deseq2(
  data = count_matrix,
  sample = df.pcoa.sample
)

# View results summary
print(table(dam_results$significance))

# Top enriched features
enriched <- dam_results \%>\%
  filter(significance == "Enriched") \%>\%
  arrange(padj) \%>\%
  head(10)
print(enriched[, c("feature_id", "log2FoldChange", "padj", "baseMean")])
}

# Example 2: Custom thresholds and design
\dontrun{
# More stringent analysis
dam_strict <- find_dams_deseq2(
  data = t(df.pcoa.otu),
  sample = df.pcoa.sample,
  formula = ~treatment + batch,  # Account for batch effects
  log2FoldChange = 1.5,          # 3-fold change threshold
  padj = 0.01,                   # 1\% FDR threshold
  min.count.per.sample = 5,      # Higher count threshold
  min.samples.with.counts = 3    # Present in at least 3 samples
)

print(paste("Strict analysis found", sum(dam_strict$significance != "NS"), 
            "significant features"))
}

# Example 3: Time series analysis
\dontrun{
# Assume sample metadata has 'timepoint' and 'subject' columns
# For longitudinal microbiome data
longitudinal_results <- find_dams_deseq2(
  data = t(df.pcoa.otu),
  sample = df.pcoa.sample,
  formula = ~timepoint + subject,  # Account for subject variation
  log2FoldChange = 0.5,            # More sensitive threshold
  padj = 0.1                       # Less stringent for exploratory analysis
)

# Focus on taxa that change over time
time_responsive <- longitudinal_results \%>\%
  filter(significance != "NS") \%>\%
  arrange(abs_log2fc) \%>\%
  tail(20)  # Top 20 by effect size

print("Top time-responsive taxa:")
print(time_responsive[, c("feature_id", "log2FoldChange", "padj")])
}

# Example 4: Creating simple count data for testing
# This demonstrates the required data format
set.seed(123)
n_features <- 100
n_samples <- 20

# Create mock count data
mock_counts <- matrix(
  rnbinom(n_features * n_samples, size = 1, mu = 10),
  nrow = n_features,
  ncol = n_samples,
  dimnames = list(
    paste0("OTU_", 1:n_features),
    paste0("Sample_", 1:n_samples)
  )
)

# Create mock sample metadata
mock_sample <- data.frame(
  row.names = colnames(mock_counts),
  group = rep(c("Control", "Treatment"), each = 10),
  batch = rep(c("Batch1", "Batch2"), times = 10),
  subject_id = paste0("Subject_", 1:20)
)

\dontrun{
# Run analysis on mock data
mock_results <- find_dams_deseq2(
  data = mock_counts,
  sample = mock_sample,
  formula = ~group
)

print("Mock data analysis results:")
print(table(mock_results$significance))
}

}
\references{
Love, M.I., Huber, W., Anders, S. (2014) Moderated estimation of fold change
and dispersion for RNA-seq data with DESeq2. Genome Biology, 15, 550.

McMurdie, P.J. and Holmes, S. (2014) Waste not, want not: why rarefying
microbiome data is inadmissible. PLoS Computational Biology, 10(4), e1003531.
}
\seealso{
\itemize{
  \item \code{\link{find_dams_lefse}} for LEfSe-based differential abundance analysis
  \item \code{\link{rarefy_table}} for rarefaction of count data
  \item \code{\link{volcano_plot}} for visualization of results
}
}
