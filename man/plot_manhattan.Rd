% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_manhattan.R
\name{plot_manhattan}
\alias{plot_manhattan}
\title{Plot Manhattan plot from GWAS results or genomic data}
\usage{
plot_manhattan(
  data = NULL,
  input_file = NULL,
  chr_col = "chr",
  pos_col = "pos",
  val_col = "value",
  transform_log10 = FALSE,
  title = "Manhattan Plot",
  ylab = NULL,
  colors = c("gray50", "steelblue"),
  threshold_line = NULL,
  threshold_color = "red",
  point_size = 1.2,
  point_alpha = 0.8
)
}
\arguments{
\item{data}{A data frame containing the plotting data. If \code{input_file} is 
provided, this parameter can be omitted.}

\item{input_file}{Character string specifying the path to the input data file. 
If \code{data} is provided, this parameter can be omitted. Supports common 
delimited formats (csv, tsv, txt).}

\item{chr_col}{Character string specifying the chromosome column name. 
Default is "chr".}

\item{pos_col}{Character string specifying the physical position column name. 
Default is "pos".}

\item{val_col}{Character string specifying the value column name (e.g., p-values). 
Default is "value".}

\item{transform_log10}{Logical value indicating whether to apply -log10 
transformation to the values. Set to TRUE for p-values. Default is FALSE.}

\item{title}{Character string for the plot title. Default is "Manhattan Plot".}

\item{ylab}{Character string for the Y-axis label. If NULL, will be set 
automatically based on \code{transform_log10}.}

\item{colors}{Character vector of colors for alternating chromosome coloring. 
Default is c("gray50", "steelblue").}

\item{threshold_line}{Numeric value for drawing a horizontal threshold line. 
Default is NULL (no line).}

\item{threshold_color}{Character string specifying the threshold line color. 
Default is "red".}

\item{point_size}{Numeric value for point size. Default is 1.2.}

\item{point_alpha}{Numeric value for point transparency (0-1). Default is 0.8.}
}
\value{
A list containing three components:
\describe{
  \item{plot.manhattan}{A ggplot object that can be further customized or 
    directly displayed.}
  \item{data.processed}{The processed data frame used for plotting, including 
    cumulative positions and transformed values.}
  \item{chromosome.centers}{A data frame containing the center positions for 
    each chromosome, useful for custom axis labeling.}
}
}
\description{
A comprehensive function for creating Manhattan plots from GWAS results or other
genome-wide data. Supports both data frames and file input, with customizable
visualization options.
}
\details{
The function automatically handles chromosome sorting using natural ordering 
(chr1, chr2, ..., chr10, chr11, ...) and calculates cumulative positions for 
proper Manhattan plot visualization. The plot uses alternating colors to 
distinguish chromosomes and includes optional threshold lines for significance 
cutoffs.
}
\note{
This function requires the following packages: dplyr, ggplot2, readr, and gtools.
The gtools package is specifically used for natural chromosome sorting.
}
\examples{
library(dplyr)
library(biohelpers)

# Create mock GWAS data
set.seed(123)
n_chr <- 10
n_points_per_chr <- 1000
mock_data <- data.frame(
  chromosome = rep(paste0("chr", 1:n_chr), each = n_points_per_chr),
  position = unlist(lapply(1:n_chr, function(x) 
    sample(1:1e6, n_points_per_chr, replace = TRUE))),
  p_value = runif(n_chr * n_points_per_chr, min = 1e-8, max = 1)
)

# Basic Manhattan plot with p-value transformation
manhattan_result <- plot_manhattan(
  data = mock_data,
  chr_col = "chromosome",
  pos_col = "position", 
  val_col = "p_value",
  transform_log10 = TRUE,
  title = "GWAS Manhattan Plot"
)

# Display the plot
manhattan_result$plot.manhattan

# Add significance threshold
manhattan_result2 <- plot_manhattan(
  data = mock_data,
  chr_col = "chromosome",
  pos_col = "position",
  val_col = "p_value", 
  transform_log10 = TRUE,
  title = "Manhattan Plot with Threshold",
  threshold_line = -log10(5e-8),
  colors = c("#276FBF", "#183059")
)

# Access processed data for further analysis
head(manhattan_result$data.processed)
manhattan_result$chromosome.centers

}
